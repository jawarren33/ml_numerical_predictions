from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error

class DecisionTreeModel:
    def __init__(self):
        self.model = DecisionTreeRegressor()

    def fit(self, X, y):
        self.model.fit(X, y)

    def predict(self, X):
        return self.model.predict(X)

def test_decision_tree(X_train, y_train, X_test, y_test):
    model = DecisionTreeModel()
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    mse = mean_squared_error(y_test, y_pred)
    return mse

# Example usage
# Split the data into training and testing sets
X_train = train_data.drop('target', axis=1)
y_train = train_data['target']
X_test = test_data.drop('target', axis=1)
y_test = test_data['target']

# Train and test the decision tree model
decision_tree = DecisionTreeModel()
decision_tree.fit(X_train, y_train)
mse = test_decision_tree(X_train, y_train, X_test, y_test)
print("Mean Squared Error:", mse)
